{
    "openapi": "3.0.1",
    "info": {
      "title": "Microsoft Graph Teams API",
      "version": "1.0.0"
    },
    "paths": {
      "/teams/{teamId}/channels/{channelId}/messages": {
        "get": {
          "summary": "List messages in a channel",
          "description": "Retrieves messages from a specified channel in Microsoft Teams. Messages are returned in chronological order (oldest first). To get the latest message, fetch a batch (e.g., `$top=50`) and take the last item.",
          "operationId": "listChannelMessages",
          "parameters": [
            {
              "name": "teamId",
              "in": "path",
              "required": true,
              "schema": { "type": "string" },
              "description": "The unique identifier of the Team."
            },
            {
              "name": "channelId",
              "in": "path",
              "required": true,
              "schema": { "type": "string" },
              "description": "The unique identifier of the Channel."
            },
            {
              "name": "$top",
              "in": "query",
              "required": false,
              "schema": { "type": "integer", "minimum": 1, "maximum": 50 },
              "description": "Number of messages to return. Use this to fetch recent messages (default 50)."
            },
            {
              "name": "$skip",
              "in": "query",
              "required": false,
              "schema": { "type": "integer", "minimum": 0 },
              "description": "Number of messages to skip for pagination."
            }
          ],
          "responses": {
            "200": {
              "description": "A collection of messages in the channel.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": { "type": "string" },
                            "createdDateTime": { "type": "string", "format": "date-time" },
                            "from": {
                              "type": "object",
                              "properties": {
                                "user": {
                                  "type": "object",
                                  "properties": {
                                    "id": { "type": "string" },
                                    "displayName": { "type": "string" }
                                  }
                                }
                              }
                            },
                            "body": {
                              "type": "object",
                              "properties": {
                                "contentType": { "type": "string" },
                                "content": { "type": "string" }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "value": [
                      {
                        "id": "1651234567890",
                        "createdDateTime": "2025-08-19T12:34:56Z",
                        "from": { "user": { "id": "user-guid", "displayName": "John Doe" } },
                        "body": { "contentType": "html", "content": "<div>Hello team ðŸ‘‹</div>" }
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized â€” missing or invalid access token."
            },
            "403": {
              "description": "Forbidden â€” the app does not have permission to read channel messages."
            }
          },
          "security": [
            {
              "oauth2": ["ChannelMessage.Read.All"]
            }
          ]
        }
      }
    },
    "components": {
      "securitySchemes": {
        "oauth2": {
          "type": "oauth2",
          "flows": {
            "authorizationCode": {
              "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/v2.0/authorize",
              "tokenUrl": "https://login.microsoftonline.com/common/oauth2/v2.0/token",
              "scopes": {
                "ChannelMessage.Read.All": "Read all channel messages"
              }
            }
          }
        }
      }
    }
  }
  